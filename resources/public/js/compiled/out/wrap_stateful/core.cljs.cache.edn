{:rename-macros {}, :renames {}, :externs {goog {DEBUG {}}, document {getElementById {}}}, :use-macros {}, :excludes #{}, :name wrap-stateful.core, :imports nil, :requires {reagent reagent.core, views wrap-stateful.views, reagent.core reagent.core, db wrap-stateful.db, wrap-stateful.subscriptions wrap-stateful.subscriptions, re-frisk.core re-frisk.core, wrap-stateful.handlers wrap-stateful.handlers, wrap-stateful.db wrap-stateful.db, re-frame re-frame.core, wrap-stateful.views wrap-stateful.views, re-frame.core re-frame.core}, :uses {enable-re-frisk! re-frisk.core}, :defs {debug? {:name wrap-stateful.core/debug?, :file "src/cljs/wrap_stateful/core.cljs", :line 10, :column 1, :end-line 10, :end-column 12, :meta {:file "/home/filip/Dropbox/ClojureProjects/wrap-statefull/src/cljs/wrap_stateful/core.cljs", :line 10, :column 6, :end-line 10, :end-column 12}, :tag js}, dev-setup {:protocol-inline nil, :meta {:file "/home/filip/Dropbox/ClojureProjects/wrap-statefull/src/cljs/wrap_stateful/core.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([]))}, :name wrap-stateful.core/dev-setup, :variadic false, :file "src/cljs/wrap_stateful/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/home/filip/Dropbox/ClojureProjects/wrap-statefull/src/cljs/wrap_stateful/core.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([]))}, :name wrap-stateful.core/mount-root, :variadic false, :file "src/cljs/wrap_stateful/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/filip/Dropbox/ClojureProjects/wrap-statefull/src/cljs/wrap_stateful/core.cljs", :line 23, :column 16, :end-line 23, :end-column 20, :export true, :arglists (quote ([]))}, :name wrap-stateful.core/init, :variadic false, :file "src/cljs/wrap_stateful/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}